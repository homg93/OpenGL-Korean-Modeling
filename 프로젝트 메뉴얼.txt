======================= 그래픽스 프로젝트(나랏말싸미) 메뉴얼 ===============================


큐브와 바닥 Obj를 로드하였으며, 각각의 Obj 파일은 저희가 직접 모델링 하였습니다.
큐브는 텍스쳐맵핑을 위해 사각형으로 Obj파일을 만들었고, 바닥은 직접 좌표를 계산해가며 물체를 모델링 했습니다.

기본적으로 큐브는 flat shading으로 구현되었고, 바닥은 gouraud shading 으로 구현 하였습니다.
큐브에는 직접만든 한글 이미지를 텍스쳐 매핑을 하였습니다.
material 값이 각각 다른 다양한 light_txt파일이 있어 원하는 재질을 선택할 수 있게 하였습니다.
큐브를 선택하면 어떤 큐브를 선택했는지 알아 볼 수 있도록 테두리 Line 을 큐브 앞에 표시해두었습니다.


라인번호 659~663에 txt파일을 주석처리 했습니다. 
하나씩 주석을 지우고 프로젝트를 실행하면 광원의 위치나 조명의 색, 물체의 재질이 변경된 것을 확인할 수 있습니다.

	659	light = fopen("light_material_gold.txt", "r");//재질 :: 골드
	660	light = fopen("light_material_silver.txt", "r");// 광원의 위치가 다름 재질 :: 실버
	661	light = fopen("light_material_bf.txt", "r");//조명 색 :: 포인트라이트 레드 // 디렉셔널 화이트 // 스팟라이트 초록
	662	light = fopen("light_material_ruby.txt", "r");// 재질 :: 루비
	663	light = fopen("light_material_emerald.txt", "r");// 재질 :: 에메랄드

------------------------마우스---------------------
큐브 선택 : 마우스 왼쪽 버튼 클릭
	 (클릭된 물체에 대한 정보를 알 수 있게 cmd창에서는 큐브번호가 출력되고, 화면에서는 큐브의 테두리가 그려집니다.)

마우스 MIDDLE 버튼 클릭시 Ortho로 시점이 전환됩니다.
	cf) 전환된 시점에서는 소문자 zx를 통한 카메라 이동이 불가능합니다.

-----------------------키보드----------------------


- point light : 숫자 1
- directional light : 숫자 2
- spot light : 숫자 3

- 시점 이동(x축 -방향) : 소문자 z
- 시점 이동(x축 +방향) : 소문자 x
(시점이 이동된 상태에서도 마우스 픽킹은 자연스럽게 이뤄집니다.)

큐브 이동 및 회전은 큐브 선택 후 가능 
요약 :	큐브의 이동은 소문자 wasd 이고 
	큐브의 회전은 대문자 WASD QE 입니다.

- x축 음의 방향이동(왼쪽이동) : 소문자 a
- x축 양의 방향이동(오른쪽이동) : 소문자 d
- z축 음의 방향이동(위로 이동) : 소문자 w
- z축 양의 방향이동(아래로 이동) : 소문자 s


- x축 반시계방향(+) 회전 : 대문자 W
- x축 시계방향(-) 회전 : 대문자 S
- y축 반시계방향(+) 회전 : 대문자 A 
- y축 시계방향(-) 회전 : 대문자 D
- z축 반시계방향(+) 회전 : 대문자 Q 
- z축 시계방향(-) 회전 : 대문자 E


- 종료 : Esc


-------------------------------------------------------